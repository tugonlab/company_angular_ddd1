<#@ template language="C#" hostSpecific="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../main.ttinclude" #>
<#//@ include file="$(SolutionDir)\Packages\T4.TemplateFileManager.2.2.1\tools\ttinc\TemplateFilemanager.CS.ttinclude" #>
<#@ include file="../ClassModel.ttinclude" #>
<#@ output extension=".txt"  #><#
var manager = TemplateFileManager.Create(this);
var classSet = new ClassSet();
var classesAll = classSet.Load().Classes;
var classes = classesAll.Where(x=> x.Name!=""  ).OrderBy(u => u.Name);
manager.StartNewFile("AutoMapper\\EntityToModel.cs","Application","",null);
#>
using AutoMapper;
using Application.ViewModels;
using Domain.Entities;

namespace Application.AutoMapper
{
    public class EntityToModel : Profile
    {
        public EntityToModel()
        {
<#foreach(var classModel in classes){#>
            CreateMap<<#=classModel.Name#>, <#=classModel.Name#>ViewModel>();
<#}#>
        }
    }
}
<#
manager.EndBlock();
#><#manager.StartNewFile("AutoMapper\\ModelToEntity.cs","Application","",null);
#>
using AutoMapper;
using Application.ViewModels;
using Domain.Entities;

namespace Application.AutoMapper
{
    public class ModelToEntity : Profile
    {
        public ModelToEntity()
        {
<#foreach(var classModel in classes){#>
            CreateMap<<#=classModel.Name#>ViewModel, <#=classModel.Name#>>();
<#}#>
        }
    }
}
<#
manager.EndBlock();
#><#

manager.Process(true);
#>