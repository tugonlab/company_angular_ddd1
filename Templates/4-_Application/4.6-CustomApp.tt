<#@ template language="C#" hostSpecific="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../main.ttinclude" #>
<#//@ include file="$(SolutionDir)\Packages\T4.TemplateFileManager.2.2.1\tools\ttinc\TemplateFilemanager.CS.ttinclude" #>
<#@ include file="../ClassModel.ttinclude" #>
<#@ output extension=".txt"  #><#
var manager = TemplateFileManager.Create(this);
	manager.CanOverrideExistingFile = false;
var classSet = new ClassSet();
var classesAll = classSet.Load().Classes;
var classes = classesAll.Where(x=> x.Name!=""  ).OrderBy(u => u.Name);
CreateDirectory("..\\..\\..\\Application\\Services\\");
CreateDirectory("..\\..\\..\\Application\\Interfaces\\");	

foreach(var classModel in classes){#>
<#
var camelCaseName = classSet.ToCamelCase(classModel.Name);	
manager.StartNewFile("Services\\"+classModel.Name+ "AppService.cs","Application","",null);
#>
namespace Application.Services
{
    public partial class <#=classModel.Name#>AppService
    {
		/*
        public <#=classModel.Name#>AppService(I<#=classModel.Name#>Service service, IUnitOfWork uow)
		:base(service, uow)
        {
			_uow = uow;
			_service = service;
        }
		*/

	}
        
}
<#
manager.EndBlock();
#>

<#
}
manager.Process(true);
#>
